# Generated by Django 5.1.4 on 2025-04-09 17:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.IntegerField()),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('subtitle_link', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.IntegerField()),
                ('release_year', models.IntegerField(blank=True, null=True)),
                ('is_finished', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('trailer_link', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SiteSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('download_domain', models.CharField(help_text='domain that use for donwload links (example: ps://example.com)', max_length=255)),
            ],
            options={
                'verbose_name': 'Site Setting',
                'verbose_name_plural': 'Site Setting',
            },
        ),
        migrations.CreateModel(
            name='Crew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('A', 'Actor'), ('D', 'Director'), ('W', 'Writer'), ('O', 'Other')], max_length=1)),
                ('bio', models.TextField()),
                ('birth_year', models.IntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/crews/')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actors', to='movie.country')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('release_year', models.IntegerField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('age_category', models.CharField(blank=True, choices=[('G', 'General Audiences(G)'), ('PG', 'Parental Guidance Suggested(PG)'), ('PG-13', 'Parents Strongly Cautioned(PG-13)'), ('R', 'Restricted(R)'), ('NC-17', 'Adults Only(NC-17)')], max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('imdb_rank', models.IntegerField(blank=True, null=True)),
                ('rate', models.DecimalField(decimal_places=1, max_digits=3)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/movie/')),
                ('subtitle_link', models.TextField(blank=True, null=True)),
                ('trailer_link', models.TextField(blank=True, null=True)),
                ('choosen_home_page', models.BooleanField(default=False)),
                ('trend', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('countries', models.ManyToManyField(blank=True, related_name='movies', to='movie.country')),
                ('crews', models.ManyToManyField(blank=True, related_name='movies', to='movie.crew')),
                ('genres', models.ManyToManyField(blank=True, related_name='movies', to='movie.genre')),
                ('languages', models.ManyToManyField(blank=True, related_name='movies', to='movie.language')),
            ],
        ),
        migrations.CreateModel(
            name='DownloadFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('Blu-ray', 'Blu-ray'), ('WEB-DL', 'WEB-DL'), ('WEBRip', 'WEBRip'), ('HDRip', 'HDRip'), ('BRRip', 'BRRip'), ('HDTV', 'HDTV'), ('DVD-Rip', 'DVD-Rip'), ('TS', 'TS'), ('CAM', 'CAM')], default='WEB-DL', help_text='Source of the video file.', max_length=20)),
                ('file_format', models.CharField(choices=[('MP4', 'MP4'), ('FLV', 'FLV'), ('MOV', 'MOV'), ('MKV', 'MKV'), ('LXF', 'LXF'), ('MXF', 'MXF'), ('AVI', 'AVI'), ('QuickTime', 'QuickTime'), ('WebM', 'WebM')], default='MKV', help_text='File container format.', max_length=20)),
                ('sticky_subtitles', models.BooleanField()),
                ('quality', models.CharField(choices=[('144p', '144p'), ('240p', '240p'), ('360p', '360p'), ('480p', '480p'), ('540p', '540p'), ('720p', '720p'), ('1080p', '1080p'), ('1440p', '1440p'), ('2160p', '2160p'), ('4320p', '4320p')], max_length=20)),
                ('256-bit-encryption', models.BooleanField(default=False)),
                ('10-bit-variant', models.BooleanField(default=False)),
                ('download_url', models.TextField(blank=True, null=True)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('episode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='download_urls', to='movie.episode')),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='download_urls', to='movie.movie')),
            ],
        ),
        migrations.AddField(
            model_name='episode',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='movie.season'),
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('release_year', models.IntegerField()),
                ('end_date', models.IntegerField(blank=True, null=True)),
                ('age_category', models.CharField(blank=True, choices=[('G', 'General Audiences'), ('PG', 'Parental Guidance Suggested'), ('PG-13', 'Parents Strongly Cautioned'), ('R', 'Restricted'), ('NC-17', 'Adults Only')], max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('imdb_rank', models.IntegerField(blank=True, null=True)),
                ('rate', models.DecimalField(decimal_places=1, max_digits=3)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/series/')),
                ('choosen_home_page', models.BooleanField(default=False)),
                ('trend', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('countries', models.ManyToManyField(blank=True, related_name='series', to='movie.country')),
                ('crews', models.ManyToManyField(blank=True, related_name='series', to='movie.crew')),
                ('genres', models.ManyToManyField(blank=True, related_name='series', to='movie.genre')),
                ('languages', models.ManyToManyField(blank=True, related_name='series', to='movie.language')),
            ],
        ),
        migrations.AddField(
            model_name='season',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='movie.series'),
        ),
        migrations.CreateModel(
            name='ShortDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Short Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='short_descriptions', to='movie.series', verbose_name='Series')),
            ],
            options={
                'verbose_name': 'Short Description',
                'verbose_name_plural': 'Short Descriptions',
            },
        ),
        migrations.CreateModel(
            name='WeeklySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'دوشنبه'), ('tuesday', 'سه\u200cشنبه'), ('wednesday', 'چهارشنبه'), ('thursday', 'پنج\u200cشنبه'), ('friday', 'جمعه'), ('saturday', 'شنبه'), ('sunday', 'یک\u200cشنبه')], max_length=10, verbose_name='Day of Week')),
                ('air_time', models.TimeField(blank=True, null=True, verbose_name='Air Time')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_schedules', to='movie.series', verbose_name='Series')),
            ],
            options={
                'verbose_name': 'Weekly Schedule',
                'verbose_name_plural': 'Weekly Schedules',
                'ordering': ['day_of_week'],
                'unique_together': {('series', 'day_of_week')},
            },
        ),
    ]
